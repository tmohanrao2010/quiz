/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class EnterQuestionsFinal extends javax.swing.JFrame {

    /**
     * Creates new form EnterQuestions
     */
    FileInputStream fs;
    File fQuestion,fChoiceA,fChoiceB,fChoiceC,fChoiceD;
    
    public EnterQuestionsFinal() {
        initComponents(); 
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2-28);
        //setExtendedState(this.MAXIMIZED_BOTH);
    }
    void clearControls()
    {
        Image defaultChoice = Toolkit.getDefaultToolkit().getImage("src/quiz/defaultChoice.jpg");
        lblBrowseA.setIcon(new ImageIcon(defaultChoice));
        lblBrowseB.setIcon(new ImageIcon(defaultChoice));
        lblBrowseC.setIcon(new ImageIcon(defaultChoice));
        lblBrowseD.setIcon(new ImageIcon(defaultChoice));
        defaultChoice = Toolkit.getDefaultToolkit().getImage("src/quiz/uploadQuestionHere.jpg");
        lblImageQuestion.setIcon(new ImageIcon(defaultChoice));
        txtaExplanation.setText("");
    }
    Boolean isClearControls()
    {
        String iconfilenameA = lblBrowseA.getIcon().toString();
        String fileNameA = iconfilenameA.substring(iconfilenameA.lastIndexOf("/"  ) + 1);
        String iconfilenameB = lblBrowseB.getIcon().toString();
        String fileNameB = iconfilenameB.substring(iconfilenameB.lastIndexOf("/"  ) + 1);
        String iconfilenameC = lblBrowseC.getIcon().toString();
        String fileNameC = iconfilenameC.substring(iconfilenameC.lastIndexOf("/"  ) + 1);
        String iconfilenameD = lblBrowseD.getIcon().toString();
        String fileNameD = iconfilenameD.substring(iconfilenameD.lastIndexOf("/"  ) + 1);
        if(fileNameA.equals("defaultChoice.jpg"))  
        { 
            JOptionPane.showMessageDialog(rootPane, "Please Upload Choice A");
            return true;
        } 
        if(fileNameB.equals("defaultChoice.jpg"))  
        { 
            JOptionPane.showMessageDialog(rootPane, "Please Upload Choice B");
            return true;
        }
        if(fileNameC.equals("defaultChoice.jpg"))  
        { 
            JOptionPane.showMessageDialog(rootPane, "Please Upload Choice C");
            return true;
        }
        if(fileNameD.equals("defaultChoice.jpg"))  
        { 
            JOptionPane.showMessageDialog(rootPane, "Please Upload Choice D");
            return true;
        }
        else
            return false;
    }
    void setFileQuestion(File f)
    {
        fQuestion = f;
    }
    File getFileQuestion()
    {
        return fQuestion;
    }
    void setFileChoiceA(File f)
    {
        fChoiceA = f;
    }
    File getFileChoiceA()
    {
        return fChoiceA;
    }
    void setFileChoiceB(File f)
    {
        fChoiceB = f;
    }
    File getFileChoiceB()
    {
        return fChoiceB;
    }
    void setFileChoiceC(File f)
    {
        fChoiceC = f;
    }
    File getFileChoiceC()
    {
        return fChoiceC;
    }
    void setFileChoiceD(File f)
    {
        fChoiceD = f;
    }
    File getFileChoiceD()
    {
        return fChoiceD;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblQuestion = new javax.swing.JLabel();
        lblExplanation = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaExplanation = new javax.swing.JTextArea();
        lblChoiceA = new javax.swing.JLabel();
        lblChoiceB = new javax.swing.JLabel();
        lblChoiceC = new javax.swing.JLabel();
        lblChoiceD = new javax.swing.JLabel();
        lblAnswer = new javax.swing.JLabel();
        cmbAnswer = new javax.swing.JComboBox<>();
        lblBrowseA = new javax.swing.JLabel();
        btnBrowseA = new javax.swing.JButton();
        lblBrowseC = new javax.swing.JLabel();
        btnBrowseC = new javax.swing.JButton();
        lblBrowseB = new javax.swing.JLabel();
        lblBrowseD = new javax.swing.JLabel();
        btnBrowseB = new javax.swing.JButton();
        btnBrowseD = new javax.swing.JButton();
        lblImageQuestion = new javax.swing.JLabel();
        btnBrowseQuestion = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cmbSubject = new javax.swing.JComboBox<>();
        lblSubject = new javax.swing.JLabel();
        cmbChapter = new javax.swing.JComboBox<>();
        lblChapter = new javax.swing.JLabel();
        lblSubTopic = new javax.swing.JLabel();
        cmbSubTopic = new javax.swing.JComboBox<>();
        btnModify = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUIZ");
        setBackground(new java.awt.Color(204, 0, 204));
        setForeground(new java.awt.Color(204, 204, 255));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(1124, 709));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("ENTER QUESTIONS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Question:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        lblQuestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQuestion.setText("Question :");

        lblExplanation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblExplanation.setText("Explanation:");

        txtaExplanation.setColumns(20);
        txtaExplanation.setRows(5);
        jScrollPane2.setViewportView(txtaExplanation);

        lblChoiceA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChoiceA.setText("Choice A:");

        lblChoiceB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChoiceB.setText("Choice B:");

        lblChoiceC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChoiceC.setText("Choice C:");

        lblChoiceD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChoiceD.setText("Choice D:");

        lblAnswer.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAnswer.setText("Answer :");

        cmbAnswer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbAnswer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choice A", "Choice B", "Choice C", "Choice D" }));

        lblBrowseA.setBackground(new java.awt.Color(204, 204, 255));
        lblBrowseA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBrowseA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/defaultChoice.jpg"))); // NOI18N
        lblBrowseA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowseA.setText("Browse");
        btnBrowseA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseAActionPerformed(evt);
            }
        });

        lblBrowseC.setBackground(new java.awt.Color(204, 204, 255));
        lblBrowseC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBrowseC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/defaultChoice.jpg"))); // NOI18N
        lblBrowseC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowseC.setText("Browse");
        btnBrowseC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseCActionPerformed(evt);
            }
        });

        lblBrowseB.setBackground(new java.awt.Color(204, 204, 255));
        lblBrowseB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBrowseB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/defaultChoice.jpg"))); // NOI18N
        lblBrowseB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblBrowseD.setBackground(new java.awt.Color(204, 204, 255));
        lblBrowseD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBrowseD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/defaultChoice.jpg"))); // NOI18N
        lblBrowseD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowseB.setText("Browse");
        btnBrowseB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseBActionPerformed(evt);
            }
        });

        btnBrowseD.setText("Browse");
        btnBrowseD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseDActionPerformed(evt);
            }
        });

        lblImageQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImageQuestion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/uploadQuestionHere.jpg"))); // NOI18N
        lblImageQuestion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBrowseQuestion.setText("Browse");
        btnBrowseQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseQuestionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(lblImageQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBrowseQuestion))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblExplanation)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblAnswer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblChoiceC)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblBrowseC, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBrowseC)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblChoiceD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblBrowseD, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBrowseD))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblChoiceA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblBrowseA, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBrowseA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblChoiceB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblBrowseB, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBrowseB))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuestion)
                    .addComponent(btnBrowseQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImageQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblExplanation)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblChoiceB)
                        .addComponent(lblBrowseB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowseB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblChoiceA)
                        .addComponent(lblBrowseA, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowseA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBrowseD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblChoiceC)
                        .addComponent(lblBrowseC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowseC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblChoiceD))
                    .addComponent(btnBrowseD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnswer)
                    .addComponent(cmbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Questions From:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        cmbSubject.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubjectItemStateChanged(evt);
            }
        });
        cmbSubject.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSubjectFocusGained(evt);
            }
        });

        lblSubject.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSubject.setText("Subject :");

        cmbChapter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbChapter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbChapterItemStateChanged(evt);
            }
        });

        lblChapter.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblChapter.setText("Chapter :");

        lblSubTopic.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSubTopic.setText("SubTopic :");

        cmbSubTopic.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(lblSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(cmbChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lblSubTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSubTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubject)
                    .addComponent(lblChapter)
                    .addComponent(cmbChapter, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubTopic)
                    .addComponent(cmbSubTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModify.setText("MODIFY");

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(379, 379, 379))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSubjectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSubjectFocusGained
        
        try
        {
            DBConnection ob = new DBConnection();
            String query = "SELECT DISTINCT subject FROM datatable";
            Statement stmt = ob.getDBConnection().createStatement();
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next())
            {
                cmbSubject.addItem(rs.getString("subject"));
            }
            ob.getDBConnection().close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            System.err.println("Got an exception!");
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_cmbSubjectFocusGained

    private void cmbSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubjectItemStateChanged
        // TODO add your handling code here:
        //System.out.println(cmbSubject.getSelectedItem());        
        cmbChapter.removeAllItems();
        try
        {
            DBConnection ob = new DBConnection();
            
            String query = "SELECT DISTINCT chapter FROM datatable where subject='"+cmbSubject.getSelectedItem()+"'";
            Statement stmt = ob.getDBConnection().createStatement();
            ResultSet rs = stmt.executeQuery(query);
            //cmbChapter.removeItemAt(0);
            while(rs.next())
            {
                cmbChapter.addItem(rs.getString("chapter"));
            }
            ob.getDBConnection().close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            System.err.println("Got an exception!");
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_cmbSubjectItemStateChanged

    private void cmbChapterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbChapterItemStateChanged
        // TODO add your handling code here:
        //System.out.println(cmbChapter.getSelectedItem());        
        cmbSubTopic.removeAllItems();
        try
        {
            DBConnection ob = new DBConnection();
            String query = "SELECT DISTINCT subtopic FROM datatable where chapter='"+cmbChapter.getSelectedItem()+"'";
            Statement stmt = ob.getDBConnection().createStatement();
            ResultSet rs = stmt.executeQuery(query);
            //cmbChapter.removeItemAt(0);
            while(rs.next())
            {
                cmbSubTopic.addItem(rs.getString("subtopic"));
            }
            ob.getDBConnection().close();
        }
        catch (ClassNotFoundException | SQLException e)
        {
            System.err.println("Got an exception!");
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_cmbChapterItemStateChanged

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearControls();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        String subjCode = cmbSubject.getSelectedItem().toString().substring(0,3); 
        String chaptCode = cmbChapter.getSelectedItem().toString().substring(0,3);
        String subTopicCode = cmbSubTopic.getSelectedItem().toString().substring(0,3);
        String qCode = subjCode+""+chaptCode+""+subTopicCode;
        
        if(!isClearControls())
        {
            try
            {
                DBConnection ob = new DBConnection();       
                String query = "INSERT INTO questionstable (qCode, question, explanation, choiceA, choiceB, choiceC, choiceD, answer) VALUES (?,?,?,?,?,?,?,?)";
            
                PreparedStatement preparedStmt = ob.getDBConnection().prepareStatement(query);
                preparedStmt.setString (1, qCode);
                fs = new FileInputStream(getFileQuestion());
                preparedStmt.setBinaryStream(2,fs,(int)getFileQuestion().length());
                preparedStmt.setString(3, txtaExplanation.getText());
                fs = new FileInputStream(getFileChoiceA());
                preparedStmt.setBinaryStream(4,fs,(int)getFileChoiceA().length());
                fs = new FileInputStream(getFileChoiceB());
                preparedStmt.setBinaryStream(5,fs,(int)getFileChoiceB().length());
                fs = new FileInputStream(getFileChoiceC());
                preparedStmt.setBinaryStream(6,fs,(int)getFileChoiceC().length());
                fs = new FileInputStream(getFileChoiceD());
                preparedStmt.setBinaryStream(7,fs,(int)getFileChoiceD().length());
                preparedStmt.setString(8, cmbAnswer.getSelectedItem().toString());
            
                preparedStmt.execute();
                ob.getDBConnection().close();
                JOptionPane.showMessageDialog(rootPane, "Data Inserted Successfully");
                clearControls();
                cmbAnswer.setSelectedIndex(0);
            }
            catch (HeadlessException | ClassNotFoundException | SQLException e)
            {
                System.err.println("Got an exception!");
                System.err.println(e.getMessage());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(EnterQuestionsFinal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Fields Cannot be Blank.....");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.setVisible(false);
        Admin ob = new Admin();
        ob.setVisible(true);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBrowseAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseAActionPerformed
        
        JFileChooser ob = new JFileChooser();
        int j=ob.showOpenDialog(this); 
        String filepath;
        if(j==JFileChooser.APPROVE_OPTION)
        {    
            fChoiceA=ob.getSelectedFile(); 
            setFileChoiceA(fChoiceA);
            filepath=fChoiceA.getPath(); 
            try {
                fs=new FileInputStream(fChoiceA);
                BufferedImage image = ImageIO.read(new File(filepath));
                lblBrowseA.setIcon(new ImageIcon(image));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnBrowseAActionPerformed

    private void btnBrowseCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseCActionPerformed
        JFileChooser ob = new JFileChooser();
        int j=ob.showOpenDialog(this); 
        String filepath;
        if(j==JFileChooser.APPROVE_OPTION)
        {    
            fChoiceC=ob.getSelectedFile(); 
            setFileChoiceC(fChoiceC);
            filepath=fChoiceC.getPath(); 
            try {
                fs=new FileInputStream(fChoiceC);
                BufferedImage image = ImageIO.read(new File(filepath));
                lblBrowseC.setIcon(new ImageIcon(image));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnBrowseCActionPerformed

    private void btnBrowseBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseBActionPerformed
        JFileChooser ob = new JFileChooser();
        int j=ob.showOpenDialog(this); 
        String filepath;
        if(j==JFileChooser.APPROVE_OPTION)
        {    
            fChoiceB=ob.getSelectedFile(); 
            setFileChoiceB(fChoiceB);
            filepath=fChoiceB.getPath(); 
            try {
                fs=new FileInputStream(fChoiceB);
                BufferedImage image = ImageIO.read(new File(filepath));
                lblBrowseB.setIcon(new ImageIcon(image));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnBrowseBActionPerformed

    private void btnBrowseDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseDActionPerformed
        JFileChooser ob = new JFileChooser();
        int j=ob.showOpenDialog(this);
        String filepath;
        if(j==JFileChooser.APPROVE_OPTION)
        {    
            fChoiceD=ob.getSelectedFile();
            setFileChoiceD(fChoiceD);
            filepath=fChoiceD.getPath(); 
            try {
                fs=new FileInputStream(fChoiceD);
                BufferedImage image = ImageIO.read(new File(filepath));
                lblBrowseD.setIcon(new ImageIcon(image));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnBrowseDActionPerformed

    private void btnBrowseQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseQuestionActionPerformed
        JFileChooser ob = new JFileChooser();
        int j=ob.showOpenDialog(this);
        String filepath;
        if(j==JFileChooser.APPROVE_OPTION)
        {    
            fQuestion=ob.getSelectedFile(); 
            setFileChoiceA(fQuestion);
            filepath=fQuestion.getPath(); 
            try {
                fs=new FileInputStream(fQuestion);
                BufferedImage image = ImageIO.read(new File(filepath));
                lblImageQuestion.setIcon(new ImageIcon(image));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PhotoTest.class.getName()).log(Level.SEVERE, null, ex);
            }  
        }
    }//GEN-LAST:event_btnBrowseQuestionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnterQuestionsFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EnterQuestionsFinal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseA;
    private javax.swing.JButton btnBrowseB;
    private javax.swing.JButton btnBrowseC;
    private javax.swing.JButton btnBrowseD;
    private javax.swing.JButton btnBrowseQuestion;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbAnswer;
    private javax.swing.JComboBox<String> cmbChapter;
    private javax.swing.JComboBox<String> cmbSubTopic;
    private javax.swing.JComboBox<String> cmbSubject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAnswer;
    private javax.swing.JLabel lblBrowseA;
    private javax.swing.JLabel lblBrowseB;
    private javax.swing.JLabel lblBrowseC;
    private javax.swing.JLabel lblBrowseD;
    private javax.swing.JLabel lblChapter;
    private javax.swing.JLabel lblChoiceA;
    private javax.swing.JLabel lblChoiceB;
    private javax.swing.JLabel lblChoiceC;
    private javax.swing.JLabel lblChoiceD;
    private javax.swing.JLabel lblExplanation;
    private javax.swing.JLabel lblImageQuestion;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblSubTopic;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JTextArea txtaExplanation;
    // End of variables declaration//GEN-END:variables

    private void setIcon(ImageIcon imageIcon) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
